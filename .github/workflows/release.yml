name: Package Release

on:
  release:
    types: [ published ]

jobs:
  release_pypi:
    name: Publish to official pypi
    runs-on: ${{ matrix.os }}
    if: ${{ github.repository == 'hansbug/pyspj' }}
    strategy:
      matrix:
        os:
          - 'ubuntu-18.04'
        python-version:
          - '3.8'

    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          fetch-depth: 20
      - name: Set up python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Set up python dependences
        run: |
          pip install --upgrade pip
          pip install --upgrade flake8 setuptools wheel twine
          pip install -r requirements.txt
          pip install -r requirements-test.txt
          pip install --upgrade build
      - name: Build packages
        run: |
          python -m build --sdist --wheel --outdir dist/
      - name: Publish distribution ðŸ“¦ to real PyPI
        uses: pypa/gh-action-pypi-publish@master
        with:
          password: ${{ secrets.PYPI_PASSWORD }}
      - name: Upload binaries to release
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: dist/*
          tag: ${{ github.ref }}
          overwrite: true
          file_glob: true

  release_github:
    name: Release Standalone CLI
    runs-on: 'ubuntu-18.04'
    if: "!contains(github.event.head_commit.message, 'ci skip')"
    container:
      image: python:${{ matrix.python-version }}
      options: --user root
    strategy:
      fail-fast: false
      matrix:
        python-version:
          - '3.6.1'

    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          fetch-depth: 20
      - name: Set up system dependences on linux
        run: |
          apt-get update
          apt-get install -y tree cloc wget curl make zip
          apt-get install -y libxml2-dev libxslt-dev python-dev  # need by pypy3
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install -r requirements-build.txt
      - name: Test the basic environment
        run: |
          python -V
          pip --version
          pip list
          tree .
      - name: Get package version
        run: |
          python -c 'from pyspj.config.meta import __VERSION__;print(__VERSION__)'
          echo "PACKAGE_VERSION=$(python -c 'from pyspj.config.meta import __VERSION__;print(__VERSION__)')" >> $GITHUB_ENV
          echo "GIT_COMMIT_ID=$(echo ${GITHUB_SHA} | cut -c1-7)" >> $GITHUB_ENV
          echo "PYTHON_VERSION=$(python -V | xargs -n 1 | tail -1)" >> $GITHUB_ENV
          echo "CPU_ARCH=$(uname -m)" >> $GITHUB_ENV
          echo "OS_NAME=$(uname)" >> $GITHUB_ENV
      - name: Get CLI name
        run: |
          echo "ZIP_NAME=pyspj-v${{ env.PACKAGE_VERSION }}-${{ env.OS_NAME }}-${{ env.CPU_ARCH }}-${{ env.GIT_COMMIT_ID }}-standalone" >> $GITHUB_ENV
          echo "CLI_NAME=pyspj-v${{ env.PACKAGE_VERSION }}-${{ env.OS_NAME }}-${{ env.CPU_ARCH }}" >> $GITHUB_ENV
      - name: Build standalone cli
        run: |
          make build
          mkdir -p dist/${{ env.CLI_NAME }}
          cp dist/pyspj dist/${{ env.CLI_NAME }}/pyspj
          cd dist
          zip -r ${{ env.ZIP_NAME }}.zip ${{ env.CLI_NAME }}
          cd ..
          ls -al dist
          dist/pyspj -v
          dist/pyspj -h
      - name: Upload binaries to release
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: dist/${{ env.ZIP_NAME }}.zip
          asset_name: ${{ env.ZIP_NAME }}.zip
          tag: ${{ github.ref }}
          overwrite: true
